import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from fpdf import FPDF
import plotly.express as px

# Função para gerar o comparativo de composição de ácidos graxos
def gerar_comparativo_blends(linha_produto):
    acidos_grx_blend_natura = {'Ácido Graxo': ['Ácido Oleico', 'Ácido Linoleico', 'Ácido Palmítico']}
    
    if linha_produto == 'Ekos':
        acidos_grx_blend_natura['Blend Natura'] = [55, 30, 15]
        acidos_grx_lipidgenesis = {'LG Blend 82/18': [60, 25, 15]}
    elif linha_produto == 'Chronos':
        acidos_grx_blend_natura['Blend Natura'] = [50, 35, 15]
        acidos_grx_lipidgenesis = {'LG Blend 82/18': [53, 30, 17]}
    
    df_natura = pd.DataFrame(acidos_grx_blend_natura)
    df_lipidgenesis = pd.DataFrame(acidos_grx_lipidgenesis)
    df_combined = pd.concat([df_natura.set_index('Ácido Graxo'), df_lipidgenesis.set_index('Ácido Graxo')], axis=1)
    df_combined.columns = ['Blend Natura', 'LG Blend 82/18']
    
    # Criando gráfico interativo com Plotly
    fig = px.bar(df_combined, x=df_combined.index, y=['Blend Natura', 'LG Blend 82/18'], 
                 title=f'Comparação de Ácidos Graxos - Linha {linha_produto}', labels={'value': 'Composição (%)'})
    st.plotly_chart(fig)

# Função para gerar a receita lipídica personalizada
def gerar_receita_lipidica(linha_produto):
    if linha_produto == 'Ekos':
        receita = {
            'Ácido Oleico': 55,
            'Ácido Linoleico': 30,
            'Ácido Palmítico': 15,
            'Proporção Total (Lipídios)': 100
        }
    elif linha_produto == 'Chronos':
        receita = {
            'Ácido Oleico': 60,
            'Ácido Linoleico': 25,
            'Ácido Palmítico': 15,
            'Proporção Total (Lipídios)': 100
        }
    
    st.write(f"**Receita Lipídica para a linha {linha_produto}:**")
    st.write(f"Ácido Oleico: {receita['Ácido Oleico']}%")
    st.write(f"Ácido Linoleico: {receita['Ácido Linoleico']}%")
    st.write(f"Ácido Palmítico: {receita['Ácido Palmítico']}%")
    st.write(f"Proporção Total (Lipídios): {receita['Proporção Total (Lipídios)']}%")
    
# Função para gerar a receita sensorial personalizada
def gerar_receita_sensorial(linha_produto):
    if linha_produto == 'Ekos':
        perfil_sensorial = {
            'Textura': 'Suave e emoliente',
            'Aroma': 'Leve e fresco',
            'Sensação na Pele': 'Hidratante e refrescante'
        }
    elif linha_produto == 'Chronos':
        perfil_sensorial = {
            'Textura': 'Aveludada e firme',
            'Aroma': 'Leve e sofisticado',
            'Sensação na Pele': 'Antienvelhecimento e nutritiva'
        }
    
    st.write(f"**Perfil Sensorial para a linha {linha_produto}:**")
    st.write(f"Textura: {perfil_sensorial['Textura']}")
    st.write(f"Aroma: {perfil_sensorial['Aroma']}")
    st.write(f"Sensação na Pele: {perfil_sensorial['Sensação na Pele']}")

# Função para gerar PDF
def gerar_pdf():
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font('Arial', 'B', 16)
    pdf.cell(200, 10, txt="Relatório Técnico e Sensorial", ln=True, align="C")
    pdf.ln(10)
    pdf.set_font('Arial', '', 12)
    pdf.cell(200, 10, txt="Este relatório foi gerado com as simulações de blends e dados sensoriais.", ln=True)
    pdf.output("relatorio_lipidgenesis.pdf")
    st.success("Relatório gerado com sucesso!")

# Função para calcular o impacto ambiental
def calcular_impacto_ambiental():
    st.write("**Simulação do Impacto Ambiental (CO₂ eq e Pegada Hídrica)**")
    impacto = {
        'Blend Natura': {'CO₂ eq (kg)': 0.5, 'Pegada Hídrica (L)': 1500},
        'LG Blend 82/18': {'CO₂ eq (kg)': 0.4, 'Pegada Hídrica (L)': 1400}
    }
    st.write(impacto)
    st.write(f"**A redução no impacto ambiental com o LG Blend 82/18 é significativa**.")

# Função para simular aceitação de mercado
def simular_aceitacao():
    st.write("**Simulação de Aceitação de Mercado:**")
    st.write("A aceitação do LG Blend 82/18 nas linhas Ekos e Chronos pode ser melhorada em 15-20% devido à sua composição aprimorada.")
    
# Função para exibir o módulo ESG
def exibir_esg():
    st.write("### Análise ESG do LG Blend 82/18")
    
    # Aspecto Ambiental (E)
    st.subheader("Aspecto Ambiental (E):")
    st.write("O LG Blend 82/18 tem um impacto ambiental significativamente reduzido devido ao uso de matérias-primas mais sustentáveis e processos de produção eficientes.")
    st.write("Impacto Ambiental (CO₂ eq): 0.4 kg")
    st.write("Pegada Hídrica: 1400L por kg de blend")
    st.write("Certificações: Orgânico, Fair Trade")

    # Aspecto Social (S)
    st.subheader("Aspecto Social (S):")
    st.write("O LG Blend 82/18 é produzido com fornecedores que seguem as melhores práticas de direitos trabalhistas, incluindo remuneração justa, segurança e inclusão social.")
    st.write("Iniciativas sociais: Programas de educação e capacitação em comunidades locais.")
    st.write("Diversidade e Inclusão: 50% de funcionários mulheres, com políticas de inclusão em todos os níveis.")

    # Aspecto de Governança (G)
    st.subheader("Aspecto de Governança (G):")
    st.write("A LipidGenesis adota práticas de governança transparente, com políticas rigorosas de compliance e ética corporativa.")
    st.write("A empresa tem um código de ética robusto e realiza auditorias independentes para garantir conformidade com as regulamentações ambientais e sociais.")
    
    # Gerar um relatório ESG
    if st.button("Gerar Relatório ESG"):
        gerar_relatorio_esg()

# Função para gerar relatório ESG
def gerar_relatorio_esg():
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font('Arial', 'B', 16)
    pdf.cell(200, 10, txt="Relatório ESG - LipidGenesis", ln=True, align="C")
    pdf.ln(10)
    
    # Aspecto Ambiental
    pdf.set_font('Arial', '', 12)
    pdf.cell(200, 10, txt="Aspecto Ambiental:", ln=True)
    pdf.cell(200, 10, txt="Impacto Ambiental (CO₂ eq): 0.4 kg", ln=True)
    pdf.cell(200, 10, txt="Pegada Hídrica: 1400L por kg", ln=True)
    pdf.cell(200, 10, txt="Certificações: Orgânico, Fair Trade", ln=True)
    pdf.ln(10)
    
    # Aspecto Social
    pdf.cell(200, 10, txt="Aspecto Social:", ln=True)
    pdf.cell(200, 10, txt="Iniciativas de Inclusão Social: Capacitação e educação em comunidades locais.", ln=True)
    pdf.cell(200, 10, txt="Diversidade e Inclusão: 50% mulheres em todos os níveis.", ln=True)
    pdf.ln(10)

    # Aspecto de Governança
    pdf.cell(200, 10, txt="Aspecto de Governança:", ln=True)
    pdf.cell(200, 10, txt="Práticas de Governança Transparente: Auditorias e compliance.", ln=True)
    pdf.cell(200, 10, txt="Código de Ética: Responsabilidade e transparência corporativa.", ln=True)
    
    pdf.output("relatorio_esg_lipidgenesis.pdf")
    st.success("Relatório ESG gerado com sucesso!")

# Layout do App
st.set_page_config(page_title="LipidGenesis - Plataforma", layout="wide")
st.title("LipidGenesis - The Future of Disruption")
st.markdown("### Comparação entre Blend Natura e LG Blend 82/18")

# Barra de navegação
menu = ["Início", "Simulações", "Relatórios", "Comparativos", "Impacto Ambiental", "Aceitação de Mercado", "Análise ESG"]
opcao = st.sidebar.radio("Escolha uma opção:", menu)

# Seleção da linha de produto
linha_produto = st.sidebar.selectbox("Escolha a linha de produto", ["Ekos", "Chronos"])

if opcao == "Início":
    st.write("Bem-vindo ao LipidGenesis, sua plataforma de inovação em óleos vegetais personalizados.")
    
elif opcao == "Simulações":
    st.write(f"### Simule os blends para a linha {linha_produto}:")
    col1, col2 = st.columns(2)
    with col1:
        st.button("Gerar Receita Lipídica")
    with col2:
        st.button("Gerar Receita Sensorial")
    
elif opcao == "Comparativos":
    st.write("### Comparativo de Blends")
    gerar_comparativo_blends(linha_produto)
    
elif opcao == "Relatórios":
    st.write("### Gerar Relatório")
    st.button("Gerar Relatório Técnico e Sensorial")
    
elif opcao == "Impacto Ambiental":
    st.write("### Simulação de Impacto Ambiental")
    calcular_impacto_ambiental()
    
elif opcao == "Aceitação de Mercado":
    st.write("### Simulação de Aceitação de Mercado")
    simular_aceitacao()

elif opcao == "Análise ESG":
    exibir_esg()
