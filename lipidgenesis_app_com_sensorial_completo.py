import streamlit as st

# === Perfis de √Åcidos Graxos Reais (baseados em laudos Eurofins) ===

RPKO_PROFILE = {
    "C6:0": 0.1751,
    "C8:0": 2.7990,
    "C10:0": 2.7349,
    "C12:0": 40.7681,
    "C14:0": 14.8587,
    "C16:0": 11.8319,
    "C18:0": 0.0000,
    "C18:1": 20.8017,
    "C18:2": 3.2454,
    "C20:0": 0.1446,
    "C20:1": 0.1049
}

RBDT_PROFILE = {
    "C12:0": 0.4976,
    "C14:0": 0.8371,
    "C16:0": 38.1650,
    "C16:1": 0.1286,
    "C18:0": 5.1485,
    "C18:1": 45.3823,
    "C18:2": 9.6964,
    "C18:3": 0.1995,
    "C20:0": 0.3747,
    "C20:1": 0.1838,
    "C15:1t": 0.0107,
    "C20:1t": 0.0320
}

# === Par√¢metros de Especifica√ß√£o do Blend Natura ===
NATURA_SPECS = {
    "Temperatura (¬∞C)": (55, 60),
    "√çndice de Acidez": 0.20,
    "Cor Lovibond (vermelho 5 1/4)": 4.0,
    "Umidade (%)": 0.20,
    "√çndice de Iodo": (37, 45),
    "√çndice de Saponifica√ß√£o (mgKOH/g)": (193, 213)
}
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.express as px
from fpdf import FPDF

# CONFIGURA√á√ÉO
st.set_page_config(page_title="LipidGenesis - Plataforma", layout="wide")
st.title("üåø LipidGenesis - Bioengineering of Oils for Nextgen")
st.markdown("#### Comparativo entre Blend Natura 82/18 e LG Blend 82/18")

# SIDEBAR
st.sidebar.title("üî¨ Configura√ß√µes")
linha = st.sidebar.selectbox("Escolha a linha de produto Natura:", ["Ekos", "Chronos", "Tododia", "Mam√£e e Beb√™"])
ocasi√£o = st.sidebar.selectbox("Ocasi√£o de uso:", ["Banho", "Rosto", "Corpo", "Cabelos"])

# PERFIS DE √ÅCIDOS GRAXOS (valores hipot√©ticos)
perfil_rbdt = {'C16:0': 45.2, 'C18:0': 4.8, 'C18:1': 38.5, 'C18:2': 10.1, 'C18:3': 1.4}
perfil_rpko = {'C12:0': 48.0, 'C14:0': 16.0, 'C16:0': 10.5, 'C18:1': 15.3, 'C18:2': 10.2}
blend_natura = {k: 0.82 * perfil_rbdt.get(k, 0) + 0.18 * perfil_rpko.get(k, 0) for k in set(perfil_rbdt) | set(perfil_rpko)}
blend_lg = {k: 0.82 * perfil_rbdt.get(k, 0) + 0.18 * perfil_rpko.get(k, 0) + np.random.normal(0, 0.2) for k in set(perfil_rbdt) | set(perfil_rpko)}

# FUN√á√ïES
def gerar_receita_lipidica(blend):
    df = pd.DataFrame.from_dict(blend, orient='index', columns=['%'])
    df.index.name = '√Åcido Graxo'
    return df

def if st.button("Gerar Receita Sensorial"):
    sensorial = get_sensory_recipe(linha_produto, ocasiao_uso)
    st.subheader("Receita Sensorial")
    st.markdown(f"**Ingrediente-chave:** {sensorial['ingrediente']}")
    st.markdown(f"**Notas olfativas:** {sensorial['notas']}")
    st.markdown(f"**Emo√ß√µes evocadas:** {sensorial['emo√ß√µes']}")
    st.markdown(f"*{sensorial['etiqueta']}*")

def mostrar_comparativo(blend1, blend2, titulo):
    df = pd.DataFrame({'Blend Natura': blend1, 'LG Blend': blend2})
    fig = px.bar(df, barmode='group', title=titulo, labels={'value': 'Composi√ß√£o (%)', 'index': '√Åcido Graxo'})
    st.plotly_chart(fig, use_container_width=True)

def mostrar_impacto_ambiental():
    natura = 1.25  # kg CO‚ÇÇ eq / kg de produto
    lg = 0.98
    st.metric("üåç Emiss√£o CO‚ÇÇ eq/kg", f"{lg:.2f}", delta=f"{(natura-lg)/natura*100:.1f}%", delta_color="inverse")

def mostrar_m√≥dulo_esg():
    st.subheader("üìä Indicadores ESG")
    col1, col2, col3 = st.columns(3)
    col1.metric("Energia renov√°vel", "92%", "+12% vs concorr√™ncia")
    col2.metric("Insumos rastre√°veis", "100%", "+25%")
    col3.metric("√Ågua reutilizada", "68%", "+18%")

def gerar_pdf(df_lipidica, sensorial_txt):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt="Relat√≥rio T√©cnico - LipidGenesis", ln=True, align='C')
    pdf.ln(10)
    pdf.cell(200, 10, txt="Receita Lip√≠dica:", ln=True)
    for i, row in df_lipidica.iterrows():
        pdf.cell(200, 10, txt=f"{i}: {row['%']:.2f}%", ln=True)
    pdf.ln(10)
    pdf.cell(200, 10, txt="Receita Sensorial:", ln=True)
    pdf.multi_cell(200, 10, txt=sensorial_txt)
    caminho = "/mnt/data/relatorio_lipidgenesis.pdf"
    pdf.output(caminho)
    return caminho

# INTERFACE PRINCIPAL
st.markdown("#### Receita Lip√≠dica e Sensorial Personalizadas")

col1, col2 = st.columns(2)
with col1:
    if st.button("üß™ Gerar Receita Lip√≠dica"):
        df_lipidica = gerar_receita_lipidica(blend_lg)
        st.dataframe(df_lipidica)
with col2:
    if st.button("üëÉ Gerar Receita Sensorial"):
        sensorial_txt = gerar_receita_sensorial(linha, ocasi√£o)
        st.success(sensorial_txt)

# COMPARATIVO
mostrar_comparativo(blend_natura, blend_lg, "Comparativo de √Åcidos Graxos")
mostrar_impacto_ambiental()
mostrar_m√≥dulo_esg()

# EXPORTAR
if st.button("üìÑ Exportar Relat√≥rio PDF"):
    df_lipidica = gerar_receita_lipidica(blend_lg)
    sensorial_txt = gerar_receita_sensorial(linha, ocasi√£o)
    caminho_pdf = gerar_pdf(df_lipidica, sensorial_txt)
    with open(caminho_pdf, "rb") as f:
        st.download_button("‚¨áÔ∏è Baixar Relat√≥rio", f, file_name="relatorio_lipidgenesis.pdf")


# === Banco de assinaturas arom√°ticas ===
def get_sensory_recipe(line, occasion):
    aromatic_profiles = {
        "Ekos": {
            "Banho": {"ingrediente": "Breu-branco", "notas": "Bals√¢mico, incensado, fresco", "emo√ß√µes": "Purifica√ß√£o, conex√£o espiritual", "etiqueta": "A floresta viva se dissolve no vapor. O breu sobe como reza ancestral, purificando alma e pele."},
            "Rosto": {"ingrediente": "Priprioca", "notas": "Terroso, amadeirado, levemente doce", "emo√ß√µes": "Enraizamento, mist√©rio", "etiqueta": "A raiz terrosa e resinosa que ancora a pele na sabedoria da floresta. Um perfume de origem."},
            "Corpo": {"ingrediente": "Castanha-do-Par√°", "notas": "Cremoso, doce, oleoso", "emo√ß√µes": "Nutri√ß√£o, conforto", "etiqueta": "Textura cremosa, aroma nutritivo. A abund√¢ncia da Amaz√¥nia se faz pele."},
            "Cabelos": {"ingrediente": "Andiroba", "notas": "Herbal-amargo, medicinal", "emo√ß√µes": "For√ßa, prote√ß√£o", "etiqueta": "For√ßa medicinal que reveste cada fio. Amargor que cura, perfume que marca."}
        },
        "Chronos": {
            "Banho": {"ingrediente": "Ch√°-verde amaz√¥nico", "notas": "Verde, leve, fresco", "emo√ß√µes": "Clareza, renova√ß√£o", "etiqueta": "Frescor t√©cnico e elegante. Um banho de clareza e renova√ß√£o celular."},
            "Rosto": {"ingrediente": "Copa√≠ba", "notas": "Amadeirado suave, doce-resinoso", "emo√ß√µes": "Serenidade, equil√≠brio", "etiqueta": "Amadeirado sutil, envolto em calma. A pele encontra seu equil√≠brio atemporal."},
            "Corpo": {"ingrediente": "Pequi", "notas": "Verde, frutado-oleoso", "emo√ß√µes": "Originalidade, sofistica√ß√£o", "etiqueta": "Ex√≥tico e refinado. O verde untuoso do cerrado encontra a pele urbana."},
            "Cabelos": {"ingrediente": "Tucum√£", "notas": "Vegetal denso, oleoso, levemente doce", "emo√ß√µes": "Reconstru√ß√£o, vigor", "etiqueta": "Textura rica e vegetal, com o perfume da reconstru√ß√£o invis√≠vel."}
        },
        "Tododia": {
            "Banho": {"ingrediente": "Pitanga", "notas": "Frutado verde, c√≠trico", "emo√ß√µes": "Alegria, vivacidade", "etiqueta": "Explos√£o frutada e c√≠trica que convida ao sorriso. Energia fresca para o dia."},
            "Rosto": {"ingrediente": "Maracuj√°", "notas": "Frutado fresco, √°cido suave", "emo√ß√µes": "Tranquilidade, equil√≠brio", "etiqueta": "√Åcido-suave que relaxa e equilibra. Um cuidado leve como um fim de tarde calmo."},
            "Corpo": {"ingrediente": "Cupua√ßu", "notas": "Doce, manteigado, tropical", "emo√ß√µes": "Aconchego, prazer", "etiqueta": "Do√ßura tropical com toque amanteigado. A pele sorri com cada aplica√ß√£o."},
            "Cabelos": {"ingrediente": "Murumuru", "notas": "Vegetal cremoso, denso", "emo√ß√µes": "Prote√ß√£o, maciez", "etiqueta": "Densidade vegetal que amacia e modela. Um b√°lsamo di√°rio de nutri√ß√£o sensorial."}
        },
        "Mam√£e e Beb√™": {
            "Banho": {"ingrediente": "Lavanda brasileira", "notas": "Floral suave, fresca, arom√°tica", "emo√ß√µes": "Calmaria, prote√ß√£o", "etiqueta": "Calma floral que embala. Uma nuvem perfumada de prote√ß√£o e amor."},
            "Rosto": {"ingrediente": "Camomila", "notas": "Herbal adocicado, suave", "emo√ß√µes": "Serenidade, aconchego", "etiqueta": "Erva doce que silencia a pele. Um carinho invis√≠vel no toque mais delicado."},
            "Corpo": {"ingrediente": "Castanha de caju", "notas": "Doce-leitosa, cremosa", "emo√ß√µes": "Acolhimento, suavidade", "etiqueta": "Doce-leitosa e familiar. A pele se reconhece nesse cuidado natural."},
            "Cabelos": {"ingrediente": "√Ågua de coco", "notas": "Aqu√°tico, leve, refrescante", "emo√ß√µes": "Frescor, leveza", "etiqueta": "Refresco leve e transparente. Umidade que limpa, aroma que acalma."}
        }
    }
    return aromatic_profiles.get(line, {}).get(occasion, {
        "ingrediente": "N/A", "notas": "N/A", "emo√ß√µes": "N/A", "etiqueta": "Combina√ß√£o n√£o dispon√≠vel no banco atual."
    })
